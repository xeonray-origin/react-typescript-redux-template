module.exports = {
  env: {
    browser: true,
  },
  parser: '@typescript-eslint/parser',
  parserOptions: {
    project: 'tsconfig.json',
    sourceType: 'module',
    ecmaFeatures: {
      jsx: true,
    },
    // See https://github.com/typescript-eslint/typescript-eslint/pull/2057
    warnOnUnsupportedTypeScriptVersion: false,
  },
  plugins: [
    '@typescript-eslint',
    'react',
    'react-hooks',
    'import',
    'simple-import-sort',
  ],
  extends: [
    'eslint:recommended',
    'plugin:@typescript-eslint/eslint-recommended',
    'plugin:@typescript-eslint/recommended',
    // 'plugin:@typescript-eslint/recommended-requiring-type-checking',
    'prettier/@typescript-eslint',
    'plugin:react/recommended',
    'plugin:import/errors',
    'plugin:import/warnings',
    'plugin:import/typescript',
  ],
  rules: {
    // '@typescript-eslint/no-unused-vars': 'off',
    '@typescript-eslint/explicit-function-return-type': 'off',
    'react-hooks/rules-of-hooks': 'error',
    // "react-hooks/exhaustive-deps": "warn",
    '@typescript-eslint/await-thenable': 'off',
    '@typescript-eslint/naming-convention': 'warn',
    '@typescript-eslint/consistent-type-assertions': 'warn',
    '@typescript-eslint/indent': 'off',
    '@typescript-eslint/member-delimiter-style': [
      'off',
      'error',
      {
        multiline: {
          delimiter: 'none',
          requireLast: true,
        },
        singleline: {
          delimiter: 'semi',
          requireLast: false,
        },
      },
    ],
    '@typescript-eslint/no-empty-function': 'warn',
    '@typescript-eslint/no-floating-promises': 'off',
    '@typescript-eslint/no-misused-new': 'warn',
    '@typescript-eslint/no-unnecessary-qualifier': 'off',
    '@typescript-eslint/no-unnecessary-type-assertion': 'off',
    '@typescript-eslint/explicit-module-boundary-types': 'off',
    '@typescript-eslint/prefer-namespace-keyword': 'warn',
    '@typescript-eslint/quotes': 'off',
    '@typescript-eslint/semi': ['off', null],
    '@typescript-eslint/space-within-parens': ['off', 'never'],
    '@typescript-eslint/type-annotation-spacing': 'off',
    '@typescript-eslint/unified-signatures': 'warn',
    'arrow-parens': ['off', 'as-needed'],
    'capitalized-comments': 'off',
    curly: ['warn', 'multi-line'],
    'eol-last': 'off',
    eqeqeq: ['warn', 'smart'],
    'id-match': 'warn',
    'import/no-deprecated': 'off',
    'linebreak-style': 'off',
    'max-len': [
      'warn',
      {
        code: 120,
      },
    ],
    'new-parens': 'warn',
    'newline-per-chained-call': 'off',
    'no-bitwise': 'warn',
    'no-caller': 'warn',
    'no-cond-assign': 'warn',
    'no-console': 'warn',
    'no-constant-condition': 'warn',
    'no-control-regex': 'warn',
    'no-duplicate-imports': 'warn',
    'no-empty': 'warn',
    'no-eval': 'warn',
    'no-extra-semi': 'off',
    'no-fallthrough': 'warn',
    'no-invalid-regexp': 'warn',
    'no-irregular-whitespace': 'off',
    'no-multiple-empty-lines': 'warn',
    'no-redeclare': 'warn',
    'no-regex-spaces': 'warn',
    'no-return-await': 'warn',
    'no-throw-literal': 'warn',
    'no-trailing-spaces': 'off',
    'no-unused-expressions': [
      'warn',
      {
        allowTaggedTemplates: true,
        allowShortCircuit: true,
      },
    ],
    'no-unused-labels': 'warn',
    'no-var': 'warn',
    'one-var': ['warn', 'never'],
    'quote-props': 'off',
    radix: 'warn',
    'space-before-function-paren': 'off',
    'spaced-comment': 'warn',
    'use-isnan': 'warn',
    '@typescript-eslint/no-use-before-define': 'off',
    '@typescript-eslint/interface-name-prefix': 'off',
    '@typescript-eslint/no-explicit-any': 'off',
    '@typescript-eslint/unbound-method': 'off',
    '@typescript-eslint/ban-ts-comment': 'off',
    '@typescript-eslint/camelcase': 'off',
    '@typescript-eslint/require-await': 'warn',
    '@typescript-eslint/no-misused-promises': 'warn',
    '@typescript-eslint/no-empty-interface': 'warn',
    '@typescript-eslint/no-inferrable-types': 'off',
    'react/display-name': 'off',
    'react/prop-types': 'off',
    'sort-imports': 'off',
    'import/order': 'off',
    'simple-import-sort/sort': 'warn',
    'no-debugger': 'error',
  },
  settings: {
    'import/resolver': 'webpack',
    'import/ignore': ['node_modules'],
    react: {
      version: require('./package.json').dependencies.react,
    },
  },
};
